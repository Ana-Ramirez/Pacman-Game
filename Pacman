public class Pacman {

  boolean movingUp;
  boolean movingDown;
  boolean movingLeft;
  boolean movingRight;

  String facingDirection = "left";
  PImage pacmanImage = loadImage("images/pacman/pacmanMoving/left/left0.png");

  int pacmanY;
  int pacmanX;
  float diameter = boxSize * 0.8;
  int imageNum = 0; //counter to represent the munching animation
  int numImages = 4;

  public Pacman(int pacmanY, int pacmanX) {
    this.pacmanY = pacmanY;
    this.pacmanX = pacmanX;
  }

  void move() {
    if (movingUp) {
      if (gameGrid[pacmanY-1][pacmanX] != 0) {
        pacmanY--;
      }
    }
    if (movingDown) {
      if (gameGrid[pacmanY+1][pacmanX] != 0) {
        pacmanY++;
      }
    }
    if (movingRight) {
      if (gameGrid[pacmanY][pacmanX+1] != 0) {
        pacmanX++;
      }
    }
    if (movingLeft) {
      if (gameGrid[pacmanY][pacmanX-1] != 0) {
        pacmanX--;
      }
    }
  }

  void display() {
    this.move();
    println("row: " + pacmanY + "           col: " + pacmanX);
    fill(255, 255, 0);


    if (facingDirection.equals("right")) {
      imageNum = (imageNum+1) % numImages;
      pacmanImage = loadImage("images/pacman/pacmanMoving/right/right" + imageNum + ".png");
      image(pacmanImage, (pacman.pacmanX*boxSize)+(boxSize/8), (pacman.pacmanY*boxSize)+(boxSize/8));
      println("right");
    } 
    
    else if (facingDirection.equals("left")) { 
      imageNum = (imageNum+1) % numImages;
      pacmanImage = loadImage("images/pacman/pacmanMoving/left/left" + imageNum + ".png");
      image(pacmanImage, (pacman.pacmanX*boxSize)+(boxSize/8), (pacman.pacmanY*boxSize)+(boxSize/8));
      println("left");
    } 
    
    else if (facingDirection.equals("down")) { 
      imageNum = (imageNum+1) % numImages;
      pacmanImage = loadImage("images/pacman/pacmanMoving/down/down" + imageNum + ".png");
      image(pacmanImage, (pacman.pacmanX*boxSize)+(boxSize/8), (pacman.pacmanY*boxSize)+(boxSize/8));
      println("down");
    } 
    
    else if (facingDirection.equals("up")) { 
      imageNum = (imageNum+1) % numImages;
      pacmanImage = loadImage("images/pacman/pacmanMoving/up/up" + imageNum + ".png");
      image(pacmanImage, (pacman.pacmanX*boxSize)+(boxSize/8), (pacman.pacmanY*boxSize)+(boxSize/8));
      println("up");
    }


    if (gameGrid[pacmanY][pacmanX] == 2) {
      gameGrid[pacmanY][pacmanX] = 1;
      score++;
      println(score);
    }
    
  }
}
