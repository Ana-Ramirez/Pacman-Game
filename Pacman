public class Pacman {

  boolean movingUp;
  boolean movingDown;
  boolean movingLeft;
  boolean movingRight;

  String facingDirection = "left";
  PImage pacmanImage = loadImage("sprites/pacman/pacmanMoving/left/left0.png");

  int pacmanY;
  int pacmanX;
  float diameter = boxSize * 0.8;
  int numImage = 0; //counter to represent the munching animation

  public Pacman(int pacmanY, int pacmanX) {
    this.pacmanY = pacmanY;
    this.pacmanX = pacmanX;
  }

  void move() {
    if (movingUp) {
      if (gameGrid[pacmanY-1][pacmanX] != 0) {
        pacmanY--;
      }
    }
    if (movingDown) {
      if (gameGrid[pacmanY+1][pacmanX] != 0) {
        pacmanY++;
      }
    }
    if (movingRight) {
      if (gameGrid[pacmanY][pacmanX+1] != 0) {
        pacmanX++;
      }
    }
    if (movingLeft) {
      if (gameGrid[pacmanY][pacmanX-1] != 0) {
        pacmanX--;
      }
    }
  }

  void display() {
    this.move();
    println("row: " + pacmanY + " colPos: " + pacmanX + " diameter: " + diameter);
    fill(255, 255, 0);


    if (facingDirection.equals("right")) {
      int numFrames = 4;
      if (millis() > startTime + 60) {
        startTime = millis();
        numImage = (numImage + 1)%numFrames;
        pacmanImage = loadImage("sprites/pacman/pacmanMoving/right/right" + numImage + ".png");
        image(pacmanImage, (pacman.pacmanX*boxSize)+(boxSize/8), (pacman.pacmanY*boxSize)+(boxSize/8));
      } else {
        pacmanImage = loadImage("sprites/pacman/pacmanMoving/right/right" + numImage + ".png");
        image(pacmanImage, (pacman.pacmanX*boxSize)+(boxSize/8), (pacman.pacmanY*boxSize)+(boxSize/8));
      }
      print("right");
    } 
    
    
    else if (facingDirection.equals("left")) { 
      int numFrames = 4;
      if (millis() > startTime + 60) {
        startTime = millis();
        numImage = (numImage + 1)%numFrames;
        pacmanImage = loadImage("sprites/pacman/pacmanMoving/left/left" + numImage + ".png");
        image(pacmanImage, (pacman.pacmanX*boxSize)+(boxSize/8), (pacman.pacmanY*boxSize)+(boxSize/8));
      } else {
        pacmanImage = loadImage("sprites/pacman/pacmanMoving/left/left" + numImage + ".png");
        image(pacmanImage, (pacman.pacmanX*boxSize)+(boxSize/8), (pacman.pacmanY*boxSize)+(boxSize/8));
      }
      print("left");
    } 
    
    
    else if (facingDirection.equals("down")) { 
      int numFrames = 4;
      if (millis() > startTime + 60) {
        startTime = millis();
        numImage = (numImage + 1)%numFrames;
        pacmanImage = loadImage("sprites/pacman/pacmanMoving/down/down" + numImage + ".png");
        image(pacmanImage, (pacman.pacmanX*boxSize)+(boxSize/8), (pacman.pacmanY*boxSize)+(boxSize/8));
      } else {
        pacmanImage = loadImage("sprites/pacman/pacmanMoving/down/down" + numImage + ".png");
        image(pacmanImage, (pacman.pacmanX*boxSize)+(boxSize/8), (pacman.pacmanY*boxSize)+(boxSize/8));
      }
      print("down");
    } 
    
    
    else if (facingDirection.equals("up")) { 
      int numFrames = 4;
      if (millis() > startTime + 60) {
        startTime = millis();
        numImage = (numImage + 1)%numFrames;
        pacmanImage = loadImage("sprites/pacman/pacmanMoving/up/up" + numImage + ".png");
        image(pacmanImage, (pacman.pacmanX*boxSize)+(boxSize/8), (pacman.pacmanY*boxSize)+(boxSize/8));
      } else {
        pacmanImage = loadImage("sprites/pacman/pacmanMoving/up/up" + numImage + ".png");
        image(pacmanImage, (pacman.pacmanX*boxSize)+(boxSize/8), (pacman.pacmanY*boxSize)+(boxSize/8));
      }
      print("left");
      print("up");
    }
  }
}
